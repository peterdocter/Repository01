1.Git 创建仓库(本地仓库)
  A. git init  使用当前目录作为Git仓库,不像 SVN 会在每个子目录生成 .svn 目录，Git 只在仓库  的根目录生成 .git 目录
  B. git init 目录 使用我们指定目录作为Git仓库

2.从仓库拷贝项目
  A. git clone <repo>  使用 git clone 从现有 Git 仓库中拷贝项目（类似 svn checkout）
  B. git clone <repo> <directory>  需要克隆到指定的目录
  (比如：git clone git://github.com/schacon/grit.git mygrit)

3.基本操作
  A.  git add 文件名  添加文件至缓存区
  B.  git status  查看在你上次提交之后是否有修改，（加了 -s 参数，以获得简短的结果输出。如    果没加该参数会详细输出内容）
  C.  git diff  查看执行 git status 的结果的详细信息。
  D.  git commit 提交缓存区内容至仓库
  E.配置基本信息
    git config --global user.name 'runoob'
    git config --global user.email test@runoob.com
  F.git reset HEAD  取消已经缓存的内容（所有内容）
  G.git rm 文件名 取消已缓存的文件
  H.git mv  重命名磁盘上文件
  I.ls  列出目录

4.分支管理
  A.  git branch 列出分支
  B.  git branch 分支名字  创建一个分子
  C.  git checkout 分支名字 切换到指定分支
  D.  git branch -d 分支名字 删除分支
  E.  gir merge 合并分支

5.查看提交历史
  A.  git log

6.TAG标签
  如果你达到一个重要的阶段，并希望永远记住那个特别的提交内容，你可以使用 git tag 给它打上标   签
  A.  git tag -a <tagname> -m "w3cschool.cc标签" / git tag -s <tagname> -m "w3cschool.cc标    签"

7.远程仓库
  A. git remote add [shortname] [url]  添加一个新的远程仓库
  B. 本地Git仓库和GitHub仓库之间的传输是通过SSH加密的，所以我们需要配置验证信息
  ssh-keygen -t rsa -C "youremail@example.com"，可生产公钥与密钥，再将公钥给git
  C. ssh -T git@github.com  此命令可查看是否创建远程仓库成功
  D.

8.推送到远程仓库
  A.git push [alias] [branch]  推送你的新分支与数据到某个远端仓库命令
  B.git remote rm [别名]  删除远程仓库
  C.已经创建远程仓库并与本地配置完成之后，其提交流程：
  git add 文件名
  git commit -m "说明"
  git push origin master  推送到 Github